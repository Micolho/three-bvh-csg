var e="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},i={},t={},n=e.parcelRequirefee5;null==n&&((n=function(e){if(e in i)return i[e].exports;if(e in t){var n=t[e];delete t[e];var a={id:e,exports:{}};return i[e]=a,n.call(a.exports,a,a.exports),a.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,i){t[e]=i},e.parcelRequirefee5=n);var a=n("ilwiq"),r=n("jiuw3"),o=n("5Rd1x"),s=n("7lx9d"),l=n("kp7Te"),d=n("8Zfx2"),p=n("4CEV9");window.logTriangleDefinitions=p.logTriangleDefinitions;const c=p.SUBTRACTION,w={displayBrushes:!0,wireframe:!1,enableDebugTelemetry:!0,displayIntersectionEdges:!1,displayTriangleIntersections:!1,displayBrush1BVH:!1,displayBrush2BVH:!1};let u,m,g,f,y,h,b,B,T,v,M,x,E,G,S,H,O,D,I,A=!0;const V=new Map;function C(){requestAnimationFrame(C);const e=w.enableDebugTelemetry;if(A){A=!1,b.updateMatrixWorld(),B.updateMatrixWorld(),H.update(),O.update();const i=window.performance.now();I.debug.enabled=e,I.useGroups=!0,I.evaluate(b,B,c,T),T.material=T.material.map((e=>V.get(e)));const t=window.performance.now()-i;y.innerText=`${t.toFixed(3)}ms`,e&&(G.setEdges(I.debug.intersectionEdges),S.setTriangles([...I.debug.triangleIntersectsA.getTrianglesAsArray(),...I.debug.triangleIntersectsA.getIntersectionsAsArray()]))}v.visible=w.wireframe,G.visible=e&&w.displayIntersectionEdges,S.visible=e&&w.displayTriangleIntersections,H.visible=w.displayBrush1BVH,O.visible=w.displayBrush2BVH,b.visible=w.displayBrushes,B.visible=w.displayBrushes,u.render(g,m)}!async function(){let e;y=document.getElementById("output"),u=new a.WebGLRenderer({antialias:!0}),u.setPixelRatio(window.devicePixelRatio),u.setSize(window.innerWidth,window.innerHeight),u.setClearColor(1118481,1),u.outputEncoding=a.sRGBEncoding,document.body.appendChild(u.domElement),g=new a.Scene,M=new a.DirectionalLight(16777215,1),M.position.set(-1,2,3),x=new a.DirectionalLight(16777215,.25),x.position.set(-1,2,3).multiplyScalar(-1),g.add(M,x),g.add(new a.AmbientLight(11583173,.1)),m=new a.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,50),m.position.set(1,2,4),m.far=100,m.updateProjectionMatrix(),h=new(0,o.OrbitControls)(m,u.domElement),I=new(0,p.Evaluator),I.attributes=["position","normal"],b=new(0,p.Brush)(new a.CylinderGeometry(1,1,1,50),new(0,p.GridMaterial)),B=new(0,p.Brush)(new a.CylinderGeometry(1,1,1,50),new(0,p.GridMaterial)),b.scale.set(.5,5,.5),B.scale.set(.5,5,.5),B.rotation.x=Math.PI/2,b.material.opacity=.15,b.material.transparent=!0,b.material.depthWrite=!1,b.material.polygonOffset=!0,b.material.polygonOffsetFactor=.2,b.material.polygonOffsetUnits=.2,b.material.side=a.DoubleSide,b.material.premultipliedAlpha=!0,B.material.opacity=.15,B.material.transparent=!0,B.material.depthWrite=!1,B.material.polygonOffset=!0,B.material.polygonOffsetFactor=.2,B.material.polygonOffsetUnits=.2,B.material.side=a.DoubleSide,B.material.premultipliedAlpha=!0,B.material.roughness=.25,B.material.color.set(15277667).convertSRGBToLinear(),g.add(b,B),e=b.material.clone(),e.side=a.FrontSide,e.opacity=1,e.transparent=!1,e.depthWrite=!0,V.set(b.material,e),e=B.material.clone(),e.side=a.FrontSide,e.opacity=1,e.transparent=!1,e.depthWrite=!0,V.set(B.material,e),V.forEach(((e,i)=>{e.enableGrid=!1,i.enableGrid=!1})),T=new a.Mesh(new a.BufferGeometry,new a.MeshStandardMaterial({flatShading:!1,polygonOffset:!0,polygonOffsetUnits:.1,polygonOffsetFactor:.1})),E=T.material,g.add(T),v=new a.Mesh(T.geometry,new a.MeshBasicMaterial({wireframe:!0,color:16777215,opacity:1,transparent:!0})),g.add(v),G=new(0,p.EdgesHelper),G.color.set(65280).convertSRGBToLinear(),g.add(G),S=new(0,p.TriangleSetHelper),S.color.set(48340).convertSRGBToLinear(),g.add(S),H=new(0,d.MeshBVHVisualizer)(b,20),O=new(0,d.MeshBVHVisualizer)(B,20),g.add(H,O);const i=await(new(0,s.GLTFLoader)).setMeshoptDecoder(l.MeshoptDecoder).loadAsync("https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/stanford-bunny/bunny.glb");D=i.scene.children[0].geometry,D.computeVertexNormals(),f=new(0,r.GUI),f.add(w,"wireframe"),f.add(w,"displayBrushes"),f.add(w,"enableDebugTelemetry").onChange((()=>A=!0)),f.add(w,"displayIntersectionEdges"),f.add(w,"displayTriangleIntersections"),f.add(w,"displayBrush1BVH"),f.add(w,"displayBrush2BVH"),window.addEventListener("resize",(function(){m.aspect=window.innerWidth/window.innerHeight,m.updateProjectionMatrix(),u.setSize(window.innerWidth,window.innerHeight)}),!1),C()}();
//# sourceMappingURL=debug.99c8aa33.js.map
